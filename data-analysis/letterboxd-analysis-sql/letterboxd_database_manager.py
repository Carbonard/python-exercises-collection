"""
This script allows importing CSV files (generated by letterboxd_diary.py) into a PostgreSQL database named 'letterboxd',
and comparing films commonly watched by different Letterboxd users.

Requirements:
    - PostgreSQL must be running locally.
    - A database named 'letterboxd' must exist.
    - Input CSV file format: diary-<username>.csv (e.g. diary-john.csv).
    - CSV files must be placed in ./data-analysis/letterboxd-analysis-sql/ and be readable by the PostgreSQL service.

Limitations:
    - Designed for PostgreSQL only (due to COPY FROM command).
    - Requires file system permissions for PostgreSQL to read CSV files.
"""

import psycopg
from psycopg import sql
from pathlib import Path
import pandas as pd
from getpass import getpass

pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)
pd.set_option('display.expand_frame_repr', False)

sql_user = input("SQL User: ")
sql_password = getpass("Password: ")


# Load SQL templates

sql_file_import_diary = Path("data-analysis","letterboxd-analysis-sql","import-user-diary.sql")
with open(sql_file_import_diary,'r') as f:
	sql_template_import_diary = f.read()

sql_file_compare_diaries = Path("data-analysis","letterboxd-analysis-sql","compare-users-diaries.sql")
with open(sql_file_compare_diaries,'r') as f:
	sql_template_compare_diaries = f.read()

sql_file_count_records = Path("data-analysis","letterboxd-analysis-sql","count-records.sql")
with open(sql_file_count_records,'r') as f:
	sql_template_count_records = f.read()


# Establish a connection to the PostgreSQL database
def connect():
	return psycopg.connect(
		host="localhost",
		user=sql_user,
		password=sql_password,
		dbname="letterboxd",
		options="-c client_encoding=UTF8",
		autocommit=False
		)

# Generate the user's diary table name from their username
def get_table_name(user):
	return user+"_diary"

# Function to import the user's diary from a CSV file to the database
def import_user_diary():

	user = input("Introduce Letterboxd user: ")

	csv_file = Path("data-analysis","letterboxd-analysis-sql",f"diary-{user}.csv")

	# Count the total number of records in the CSV file to later verify correct import
	if csv_file.exists():
		with open(csv_file, 'r') as f:
			total_records=sum(1 for _ in f)-1 # Subtract 1 to exclude the header row
	else:
		print("CSV file does not exists.")
		return

	try: # Connect to database
		with connect() as connection:
			with connection.cursor() as cursor:

				table_name = get_table_name(user)

				# Import CSV data into the database
				cursor.execute(sql.SQL(sql_template_import_diary).format(
					table = sql.Identifier(table_name), # Use Identifier to safely escape table name
					src=sql.Literal(csv_file.resolve().as_posix())	# Use Literal to safely escape file path
					 												# Use resolve and as_posix to adapt path for SQL
				))

				# Execute a query to count the number of records and verify successful import
				cursor.execute(sql.SQL(sql_template_count_records).format(
					table = sql.Identifier(table_name)
				))

				# Check if the number of records in the database matches the expected count
				if cursor.fetchone()[0]==total_records:
					connection.commit()
					print(f"Data recorded successfuly. {total_records} records saved.")

	except psycopg.OperationalError as e:
		print(f"Error: {type(e).__name__}\n{e}")
		exit()

	except psycopg.errors.ConnectionFailure as e:
		print(f"Connection to the database failed.\n{e}")

	except psycopg.errors.InsufficientPrivilege as e:
		print(f"Insufficient privileges to open the file ({csv_file})\nPlease ensure the necessary file permissions are set and try again.")

	except psycopg.Error as e:
		print(f"Unexpected PostgreSQL Error: {type(e).__name__}\n{e}")
		connection.rollback()

	except Exception as e:
		print(f"Unexpected Error: {type(e).__name__}\n{e}")

def compare_data():
	print("Introduce two users:")
	user1 = input()
	user2 = input()

	try:
		with connect() as connection:
			with connection.cursor() as cursor:

				table1_name = get_table_name(user1)
				table2_name = get_table_name(user2)

				# Import CSV data into the database
				cursor.execute(sql.SQL(sql_template_compare_diaries).format(
					table_1 = sql.Identifier(table1_name), # Use Identifier to safely escape table name
					table_2 = sql.Identifier(table2_name), # Use Identifier to safely escape table name
				))
				# display_sql(cursor.fetchall())
				print(pd.DataFrame(cursor.fetchall(), columns=["Release Year",
																"Title",
																"Watched by " + user1,
																"Watched by " + user2,
																"Rating by " + user1,
																"Rating by " + user2
																]))

	except psycopg.errors.ConnectionFailure as e:
		print(f"Connection to the database failed.\n{e}")

	except psycopg.Error as e:
		print(f"Unexpected PostgreSQL Error: {type(e).__name__}\n{e}")
		connection.rollback()

	except Exception as e:
		print(f"Unexpected Error: {type(e).__name__}\n{e}")


# Main loop to run the program
while True:
	ans = input("""What do you want to do? 
				Register user's data (R)
				Compare users' data (C)
				Exit (E)
				""").lower()[0]
	if ans == 'r':
		import_user_diary()
	elif ans == 'c':
		compare_data()
	elif ans == 'e':
		break
